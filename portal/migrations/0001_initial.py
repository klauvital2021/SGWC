# Generated by Django 4.0.4 on 2022-06-28 04:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True, verbose_name='Nome')),
                ('dtanasc', models.DateField(blank=True, db_column='dtanasc', null=True, verbose_name='Dta Nasc')),
                ('rg', models.CharField(blank=True, max_length=200, null=True, verbose_name='RG')),
                ('cpf', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='CPF')),
                ('endereco', models.CharField(max_length=200, null=True, verbose_name='Endereço')),
                ('bairro', models.CharField(max_length=200, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=200, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, db_column='UF', max_length=2, null=True, verbose_name='Estado')),
                ('celular_whatsapp', models.CharField(max_length=200, unique=True, verbose_name='Celular-What')),
                ('celular_recado', models.CharField(blank=True, max_length=200, null=True, verbose_name='Recado')),
                ('estado_civil', models.CharField(choices=[('1', 'Solteiro(a)'), ('2', 'Casado(a)'), ('3', 'Divorciado(a)'), ('4', 'Viuvo(a)'), ('5', 'União Estável'), ('6', 'Outros')], max_length=1, verbose_name='Estado Civil')),
                ('nome_conjuge', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cônjuge')),
                ('naturalidade', models.CharField(blank=True, max_length=200, null=True, verbose_name='Naturalidade')),
                ('nacionalidade', models.CharField(max_length=200, null=True, verbose_name='Nacionalidade')),
                ('status', models.CharField(choices=[('1', 'Ativo'), ('2', 'Inativo')], max_length=1, verbose_name='Estatus')),
                ('tipo_usuario', models.CharField(choices=[('1', 'Administrador'), ('2', 'Responsável'), ('3', 'Cuidador'), ('4', 'Dependente'), ('5', 'Técnico em Enfermagem')], max_length=1, verbose_name='Usuário')),
            ],
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=200, unique=True, verbose_name='Nome')),
                ('endereco', models.CharField(max_length=100, verbose_name='Endereço')),
                ('bairro', models.CharField(max_length=30, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=30, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, db_column='UF', max_length=2, null=True, verbose_name='Estado')),
                ('email', models.EmailField(blank=True, max_length=30, null=True, unique=True, verbose_name='E-mail')),
                ('status', models.CharField(choices=[('1', 'Ativo'), ('2', 'Inativo')], max_length=1, verbose_name='Estatus')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['nome'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Responsavel',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='portal.usuario')),
                ('parentesco', models.CharField(choices=[('1', 'Filho'), ('2', 'Neto'), ('3', 'Irmão'), ('4', 'Outro')], max_length=1, verbose_name='Tipo de Responsável')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True, verbose_name='Email')),
                ('senha', models.CharField(max_length=20)),
                ('familia', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nome'],
            },
            bases=('portal.usuario',),
        ),
        migrations.CreateModel(
            name='Dependente',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='portal.usuario')),
                ('convenio_medico', models.CharField(max_length=100, verbose_name='Convênio')),
                ('contato_fone_convenio', models.CharField(max_length=20, verbose_name='Telefone Convênio')),
                ('contato_endereco_convenio', models.CharField(max_length=100, verbose_name='Endereço Convênio')),
                ('familia', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nome'],
            },
            bases=('portal.usuario',),
        ),
        migrations.CreateModel(
            name='Cuidador',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='portal.usuario')),
                ('data_inicio', models.DateField(blank=True, db_column='dtaIni', null=True, verbose_name='Admissão')),
                ('data_fim', models.DateField(blank=True, db_column='dtaFim', null=True, verbose_name='Demissão')),
                ('regime_contratacao', models.CharField(choices=[('1', 'CLT'), ('2', 'PJ'), ('3', 'Free Lance'), ('4', 'Prestação Serviços')], max_length=1, verbose_name='Contratação')),
                ('carga_horaria_semanal', models.IntegerField(blank=True, db_column='carga_horaria_semanal', null=True, verbose_name='Carga Hor Sem')),
                ('turno_trabalho', models.CharField(choices=[('1', 'Diurno'), ('2', 'Noturno')], max_length=1, verbose_name='Turno')),
                ('quem_indicou', models.CharField(max_length=100, verbose_name='Indicação')),
                ('salario_atual', models.DecimalField(db_column='salario_atual', decimal_places=2, default=0, max_digits=10, verbose_name='Salário')),
                ('adicional', models.DecimalField(db_column='adicional', decimal_places=2, default=0, max_digits=10, verbose_name='Adicional')),
                ('dia_pagamento', models.DateField(blank=True, db_column='dia_pagamento', null=True, verbose_name='Dia pag')),
                ('observacao', models.TextField(max_length=1000, verbose_name='Senha')),
                ('email', models.EmailField(blank=True, max_length=30, null=True, unique=True, verbose_name='E-mail')),
                ('senha', models.CharField(max_length=20)),
                ('familia', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['nome'],
            },
            bases=('portal.usuario',),
        ),
    ]
